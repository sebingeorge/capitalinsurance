
@model IList<Capital.Domain.Department>
@using GridMvc.Html
@{
    ViewBag.Title = "Department";
    Layout = "~/Views/Shared/_LayoutPopup.cshtml";
}
<style type="text/css">
    .tableData {
        font-size: 12px;
        padding-left: 4px;
    }

    .list {
        display: block;
        height: 320px;
        overflow-y: scroll;
    }

        .list tr:hover {
            background-color: #DFEDF7;
        }
</style>

<div class="table-responsive">

    <div class="main-grid">

        @Html.Grid(Model).Columns(columns =>
                {
                    columns.Add(m => m.DeptId).Titled("Code").SetWidth(20);
                    columns.Add(m => m.DeptName).Titled("Name").SetWidth(120);
                   columns.Add().Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(o => @<center><a href="javascript:void(0);" class="form-button5" onclick="SetDepartment('@o.DeptName')">Select</a></center>);
                }).WithPaging(10)

    </div>

</div>
<script>
    function SetDepartment(term) {
        var existing_value = window.opener.$("#Deptment").val();
        var existing_array = existing_value.split(', ');
        if ($.inArray(term, existing_array) < 0) {
            var coma = existing_value == '' ? '' : ', ';
            window.opener.$("#Deptment").val(existing_value + coma + term);
        }
        window.close();
        return false;
    }
</script>

