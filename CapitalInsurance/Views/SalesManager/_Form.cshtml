@model Capital.Domain.SalesManager

<script>
    function ShowDepartment() {
        var x = screen.width / 2 - 600 / 2;
        var y = screen.height / 2 - 300 / 2;
        var url = '@Url.Action("DepartmentPopup", "SalesManager")';
        var popup = window.open(url, "DepartmentPopup", 'width=500,height=300,menubar=no,status=no,titlebar=no,location=no,scrollbars=no,left=' + x + ',top=' + y);
        popup.focus();
        return false;
    }
    function ShowLocation() {
        var x = screen.width / 2 - 600 / 2;
        var y = screen.height / 2 - 300 / 2;
        var url = '@Url.Action("LocationPopup", "SalesManager")';
        var popup = window.open(url, "LocationPopup", 'width=500,height=300,menubar=no,status=no,titlebar=no,location=no,scrollbars=no,left=' + x + ',top=' + y);
        popup.focus();
        return false;
    }

</script>
<div class="row">
    <div class="col-md-12">
        <div class="row form-group">
            <div class="col-md-3">
                <label>Employee ID</label>
                @Html.HiddenFor(m => m.SalesMgId)
                @Html.TextBoxFor(m => m.SalesMgCode, new { @class = "form_input half" })
                @Html.ValidationMessageFor(m => m.SalesMgCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Employee Name</label>
                @Html.TextBoxFor(m => m.SalesMgName, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.SalesMgName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-6">
                <label>Gender</label>
                @Html.DropDownListFor(m => Model.GenderId, (SelectList)ViewBag.Gender, "Select Gender", new { @class = "form_input", autocomplete = "off" })
            </div>
            <div class="col-md-6">
                <label>Marital Status</label>
                @Html.DropDownListFor(m => Model.MaritalStatusId, (SelectList)ViewBag.MaritalStatus, "Select Marital Status", new { @class = "form_input", autocomplete = "off" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-6">
                <label>Designation</label>
                @Html.DropDownListFor(m => Model.DsgId, (SelectList)ViewBag.Designation, "Select Designation", new { @class = "form_input", autocomplete = "off" })
        </div>
            <div class="col-md-6">
                <label>Nationality</label>
                @Html.DropDownListFor(m => Model.CountryId, (SelectList)ViewBag.Country, "Select Nationality", new { @class = "form_input", autocomplete = "off" })
            </div>

        </div>
    </div>
    
</div>
<div class="row">
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Department</label>
                @Html.TextBoxFor(m => m.Deptment, new { @class = "form_input nzero", autocomplete = "off" })
                <button type="button" class="create right" onclick="ShowDepartment()">...</button>
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-6">
                <label>Salary</label>
                @Html.TextBoxFor(m => m.MonthlySalary, new { @class = "form_input text-right", autocomplete = "off" })
          
            </div>
            <div class="col-md-6">
                <label>Incentive %</label>
                @Html.TextBoxFor(m => m.IncentivePerc, new { @class = "form_input text-right", autocomplete = "off" })

            </div>
        </div>
    </div>



    @*<div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Location</label>
                @Html.TextBoxFor(m => m.Location, new { @class = "form_input nzero", autocomplete = "off" })
                <button type="button" class="create right" onclick="ShowLocation()">...</button>*@
                @*<input type="text" class="form_input nzero" />
                <button type="button" class="create right">...</button>*@
            @*</div>
        </div>
    </div>*@
</div>

<hr />
<h2>Current Address</h2>
<div class="row">

    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Address 1</label>
                @Html.TextBoxFor(m => m.CurrentAddress1, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.CurrentAddress1, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Address 2</label>
                @Html.TextBoxFor(m => m.CurrentAddress2, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.CurrentAddress2, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Address 3</label>
                @Html.TextBoxFor(m => m.CurrentAddress3, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.CurrentAddress3, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-6">
                <label>State</label>
                @*@Html.DropDownListFor(m => Model.StateId, (SelectList)ViewBag.State, "Select State", new { @class = "form_input", autocomplete = "off" })*@
                @Html.TextBoxFor(m => m.StateId, new { @class = "form_input" })
                @*<select class="form_input">
                    <option value="">State 1</option>
                    <option value="">State 2</option>
                </select>*@
            </div>

            <div class="col-md-6">
                <label>Country</label>
                @*@Html.DropDownListFor(m => Model.CountryId, (SelectList)ViewBag.Country, "Select Country", new { @class = "form_input", autocomplete = "off" })*@
                @Html.TextBoxFor(m => m.CountryId, new { @class = "form_input" })
                @*<select class="form_input">
                    <option value="">Country 1</option>
                    <option value="">Country 2</option>
                </select>*@
            </div>
        </div>
    </div>

</div>
<hr />
<h2>Permanent Address</h2>
<div class="row">

    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Address 1</label>
                @Html.TextBoxFor(m => m.PermanantAddress1, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PermanantAddress1, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Address 2</label>
                @Html.TextBoxFor(m => m.PermanantAddress2, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PermanantAddress2, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Address 3</label>
                @Html.TextBoxFor(m => m.PermanantAddress3, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PermanantAddress3, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-6">
                <label>State</label>
                @Html.TextBoxFor(m => m.PermanantState, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PermanantState, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                <label>Country</label>
                @Html.TextBoxFor(m => m.PermanantCountry, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PermanantCountry, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

</div>
<hr />
<h2>Contact Details</h2>
<div class="row">

    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Qatar Contact Number</label>
                @Html.TextBoxFor(m => m.QuatarContactNo, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.QuatarContactNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-12">
                <label>Official Email</label>
                @Html.TextBoxFor(m => m.OfficeEmail, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.OfficeEmail, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Home Country Contact Number</label>
                @Html.TextBoxFor(m => m.HomeCountryContactNo, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.HomeCountryContactNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-12">
                <label>Personal Email</label>
                @Html.TextBoxFor(m => m.PersonalEmail, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PersonalEmail, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="row form-group">
            <div class="col-md-6">
                <label>Passport No.</label>
                @Html.TextBoxFor(m => m.PassportNo, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.PassportNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label>Visa / Residence ID</label>
                @Html.TextBoxFor(m => m.VisaOrResId, new { @class = "form_input" })
                @Html.ValidationMessageFor(m => m.VisaOrResId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                <label>Issue Date</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.TextBoxFor(m => m.PassportIssueDate, new { @class = "form_input" })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                @Html.ValidationMessageFor(m => m.PassportIssueDate, "", new { @class = "text-danger" })
                @*<input type="text" class="form_input" />*@
            </div>
            <div class="col-md-3">
                <label>End Date</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.TextBoxFor(m => m.PassportEndDate, new { @class = "form_input" })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                @Html.ValidationMessageFor(m => m.PassportEndDate, "", new { @class = "text-danger" })
                @*<input type="text" class="form_input" />*@
            </div>
            <div class="col-md-3">
                <label>Issue Date</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.TextBoxFor(m => m.VisaIssueDate, new { @class = "form_input" })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div> 
                @Html.ValidationMessageFor(m => m.VisaIssueDate, "", new { @class = "text-danger" })
                @*<input type="text" class="form_input" />*@
            </div>
            <div class="col-md-3">
                <label>End Date</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.TextBoxFor(m => m.VisaEndDate, new { @class = "form_input" })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div> 
                @Html.ValidationMessageFor(m => m.VisaEndDate, "", new { @class = "text-danger" })
                @*<input type="text" class="form_input" />*@
            </div>
        </div>
    </div>

    <div class="col-md-2">
        <div class="row form-group">
            <div class="col-md-12">
                <label>Date of Joining</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.TextBoxFor(m => m.DateOfJoining, new { @class = "form_input" })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div> 
                @Html.ValidationMessageFor(m => m.DateOfJoining, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-12">
                <label>Date of Birth</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form_input", @Value = Model.DateOfBirth.ToString("dd-MMM-yyyy") })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div> 
                @Html.ValidationMessageFor(m => m.DateOfBirth,"", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row form-group">
        </div>
    </div>
</div>

