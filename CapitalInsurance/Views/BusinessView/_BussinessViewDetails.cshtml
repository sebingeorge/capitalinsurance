
@model List<Capital.Domain.PolicyIssue>
@using GridMvc.Html
@{
    string[] a = (string[])Session["Tags"];
     //TempData["tags"] = ViewBag.tags;
}

<div class="table-responsive scroll3">
    @*<span class="filter"><img src="~/Images/icon/filter.png" /></span>*@

    @Html.Grid(Model).Columns(columns =>
    {
        if (@a.Contains("Model.Year"))
        {
            columns.Add(m => m.Year).Titled("YEAR").SetWidth(10);
        }
        if (@a.Contains("Model.Month"))
        {
            columns.Add(m => m.Month).Titled("MONTH").SetWidth(5);
        }
        //if (@a.Contains("Model.Day"))
        //{
        //    columns.Add(m => m.Day).Titled("DAY").SetWidth(5);
        //}
        if (@a.Contains("Model.SalesMgCode"))
        {
            columns.Add(m => m.SalesMgCode).Titled("EMP NO").SetWidth(10);
        }
        if (@a.Contains("Model.SalesMgName"))
        {
            columns.Add(m => m.SalesMgName).Titled("MANAGER NAME").SetWidth(5);
        }
        if (@a.Contains("Model.InsuredName"))
        {
            columns.Add(m => m.InsuredName).Titled("INSURED NAME").SetWidth(5);
        }
        if (@a.Contains("Model.CusName"))
        {
            columns.Add(m => m.CusName).Titled("CUSTOMER NAME").SetWidth(20);
        }
        if (@a.Contains("Model.CustContPersonName"))
        {
            columns.Add(m => m.CustContPersonName).Titled("CONTACT PERSON").SetWidth(20);
        }
        if (@a.Contains("Model.CustContDesignation"))
        {
            columns.Add(m => m.CustContDesignation).Titled("DESIGNATION").SetWidth(20);
        }
        if (@a.Contains("Model.MobileNo"))
        {
            columns.Add(m => m.MobileNo).Titled("MOBILE NO").SetWidth(20);
        }
        if (@a.Contains("Model.OfficeNo"))
        {
            columns.Add(m => m.OfficeNo).Titled("BOARD NO").SetWidth(20);
        }
        if (@a.Contains("Model.EmailId"))
        {
            columns.Add(m => m.EmailId).Titled("EMAIL").SetWidth(20);
        }
        if (@a.Contains("Model.TranType"))
        {
            columns.Add(m => m.TranType).Titled("TYPE OF BIZ").SetWidth(20);
        }
        //if (@a.Contains("Model.InsCoverName"))
        //{
        //    columns.Add(m => m.InsCoverName).Titled("TYPE OF COVER").SetWidth(10);
        //}
        if (@a.Contains("Model.InsCmpName"))
        {
            columns.Add(m => m.InsCmpName).Titled("INS COMPANY").SetWidth(5);
        }
        if (@a.Contains("Model.InsPrdName"))
        {
            columns.Add(m => m.InsPrdName).Titled("COVERAGE").SetWidth(5);
        }
        if (@a.Contains("Model.PolicyNo"))
        {
            columns.Add(m => m.PolicyNo).Titled("POLICY NO").SetWidth(5);
        }
        if (@a.Contains("Model.EffectiveDate"))
        {
            columns.Add(m => m.EffectiveDate).Format("{0:dd/MM/yyyy}").Titled("INCEPTION DATE").SetWidth(20);
        }
        if (@a.Contains("Model.ExpiryDate"))
        {
            columns.Add(m => m.ExpiryDate).Format("{0:dd/MM/yyyy}").Titled("EXPIRY DATE").SetWidth(5);
        }
        if (@a.Contains("Model.RenewalDate"))
        {

            columns.Add(m => m.RenewalDate).Format("{0:dd/MM/yyyy}").Titled("RENEWAL DATE").SetWidth(5);
        }
        if (@a.Contains("Model.EndorcementDate"))
        {
            columns.Add(m => m.EndorcementDate).Format("{0:dd/MM/yyyy}").Titled("END DATE_CIB COMM CALC").SetWidth(5);
        }
        if (@a.Contains("Model.ICActualDate"))
        {
            columns.Add(m => m.ICActualDate).Format("{0:dd/MM/yyyy}").Titled("END DATE_IC ACTUALS").SetWidth(5);
        }
        if (@a.Contains("Model.EndType"))
        {
            columns.Add(m => m.EndType).Titled("END TYPE").SetWidth(5);
        }
        if (@a.Contains("Model.EndorcementNo"))
        {
            columns.Add(m => m.EndorcementNo).Titled("END NUMBER").SetWidth(5);
        }
        if (@a.Contains("Model.AdditionEmpNo"))
        {
            columns.Add(m => m.AdditionEmpNo).Titled("NO OF MEMBERS ADDED").SetWidth(10);
        }
        if (@a.Contains("Model.DeletionEmpNo"))
        {
            columns.Add(m => m.DeletionEmpNo).Titled("NO OF MEMBERS DELETED").SetWidth(10);
        }
        if (@a.Contains("Model.PremiumAmount"))
        {
            columns.Add(m => m.PremiumAmount).Titled("BASIC PREMIUM").SetWidth(10);
        }
        if (@a.Contains("Model.PolicyFee"))
        {
            columns.Add(m => m.PolicyFee).Titled("POLICY FEE").SetWidth(10);
        }
        if (@a.Contains("Model.CommissionPerc"))
        {
            columns.Add(m => m.CommissionPerc).Titled("COMMISSION %").SetWidth(10);
        }
        if (@a.Contains("Model.ExtraPremium"))
        {
            columns.Add(m => m.ExtraPremium).Titled("EXTRA PREMIUM").SetWidth(10);
        }
        if (@a.Contains("Model.TotalPremium"))
        {
            columns.Add(m => m.TotalPremium).Titled("TOTAL PREMIUM").SetWidth(10);
        }
        if (@a.Contains("Model.cibpaid"))
        {
            columns.Add(m => m.cibpaid).Titled("CIB PAID").SetWidth(10);
        }
        if (@a.Contains("Model.BalanceRecivable"))
        {
            columns.Add(m => m.BalanceRecivable).Titled("BALANCE RECEIVABLE").SetWidth(10);
        }
        if (@a.Contains("Model.InsCompPaid"))
        {
            columns.Add(m => m.InsCompPaid).Titled("INS COMP PAID").SetWidth(10);
        }
        if (@a.Contains("Model.CommissionAmount"))
        {
            columns.Add(m => m.CommissionAmount).Titled("TOTAL COMMISSION").SetWidth(10);
        }
        if (@a.Contains("Model.PaymentTo"))
        {
            columns.Add(m => m.PaymentTo).Titled("PAID TO").SetWidth(10);
        }
        if (@a.Contains("Model.Aging"))
        {
            columns.Add(m => m.Aging).Titled("AGEING").SetWidth(20);
        }

    }).WithPaging(15).SetRowCssClasses(x => x.SalesMgName == x.SalesMgName ? "rowfocus" : "")


</div>