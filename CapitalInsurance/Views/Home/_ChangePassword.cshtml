
@model Capital.Domain.ResetPassword
<script>
  
</script>
@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "FormChangePassword" }))
    {
    @Html.AntiForgeryToken()
<div class="row form-group">
    <div class="col-md-5"><label>Old Password</label></div>
    <div class="col-md-7">
        @Html.PasswordFor(m => m.OldPassword, new { @class = "form_input", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
    </div>
</div>

<div class="row form-group">
    <div class="col-md-5"><label>New Password</label></div>
    <div class="col-md-7">
        @Html.PasswordFor(m => m.Password, new { @class = "form_input", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>
</div>

<div class="row form-group">
    <div class="col-md-5"><label>Confirm Password</label></div>
    <div class="col-md-7">
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form_input", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <hr />
        @*<button type="button" class="form-button right" onclick="Changepassword()">Change Password</button>*@
        <button type="submit" class="form-button right">Change Password</button>
    </div>
</div>
}
<script>
    $(document).ready(function () {
    
        $.validator.unobtrusive.parse($('#FormChangePassword'));
    });
</script>